{
  "parent": "c2me.mixins.json",
  "required": true,
  "package": "com.ishland.c2me.fixes.worldgen.threading_issues.mixin",
  "plugin": "com.ishland.c2me.fixes.worldgen.threading_issues.MixinPlugin",
  "refmap": "c2me_fixes_worldgen_threading_issues.refmap.json",
  "mixins": [
    "asm.MineshaftPieces$MineShaftCorridorASM",
    "asm.NetherFortressPieces$CastleSmallCorridorLeftTurnPieceASM",
    "asm.NetherFortressPieces$CastleSmallCorridorRightTurnPieceASM",
    "asm.NetherFortressPieces$MonsterThroneASM",
    "asm.NetherFortressPieces$StartPieceASM",
    "asm.OceanMonumentPieces$MonumentBuildingASM",
    "asm.OceanMonumentPieces$RoomDefinitionASM",
    "asm.PoolElementStructurePieceASM",
    "asm.ScatteredFeaturePieceASM",
    "asm.StrongholdPieces$ChestCorridorASM",
    "asm.StrongholdPieces$PortalRoomASM",
    "asm.StrongholdPieces$StartPieceASM",
    "asm.SwampHutPieceASM",
    "asm.TemplateStructurePieceASM",
    "asm.WoodlandMansionPieces$PlacementDataASM",
    "deadlocks.MixinDataFixerType",
    "threading.MixinChunk",
    "threading.MixinDesertTempleGenerator",
    "threading.MixinJungleTempleGenerator",
    "threading.MixinMineshaftGeneratorMineshaftRoom",
    "threading.MixinNetherFortressGeneratorPiece",
    "threading.MixinNetherFortressGeneratorPieceData",
    "threading.MixinNetherFortressGeneratorStart",
    "threading.MixinNoiseChunkGenerator",
    "threading.MixinOrder",
    "threading.MixinRandomizedIntBlockStateProvider",
    "threading.MixinStrongholdGenerator",
    "threading.MixinStrongholdGeneratorPieceData",
    "threading.MixinStrongholdGeneratorSpiralStaircase",
    "threading.MixinStrongholdGeneratorStart",
    "threading.MixinStructure",
    "threading.MixinStructureChecker",
    "threading.MixinStructurePalettedBlockInfoList",
    "threading.MixinStructurePlacementData",
    "threading.MixinStructureStart",
    "threading.MixinWeightedList",
    "threading.MixinWoodlandMansionGeneratorMansionParameters",
    "threading.checks.MixinThreadedAnvilChunkStorage",
    "threading.math.MixinAffineTransformation",
    "threading.math.MixinDirectionTransformation",
    "threading_detections.random_instances.MixinWorld"
  ]
}
